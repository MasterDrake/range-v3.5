# Copyright Gonzalo Brito Gadeschi 2015
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)
#
# Detects the C++ compiler, system, build-type, etc.
include(CheckCXXCompilerFlag)

if("x${CMAKE_CXX_COMPILER_ID}" MATCHES "x.*Clang")
  if("x${CMAKE_CXX_SIMULATE_ID}" STREQUAL "xMSVC")
    set (EARANGES_CXX_COMPILER_CLANGCL TRUE)
    if (EARANGES_VERBOSE_BUILD)
      message(STATUS "[EARanges]: compiler is clang-cl.")
    endif()
  else()
    set (EARANGES_CXX_COMPILER_CLANG TRUE)
    if (EARANGES_VERBOSE_BUILD)
      message(STATUS "[EARanges]: compiler is clang.")
    endif()
  endif()
elseif(CMAKE_COMPILER_IS_GNUCXX)
  set (EARANGES_CXX_COMPILER_GCC TRUE)
  if (EARANGES_VERBOSE_BUILD)
    message(STATUS "[EARanges]: compiler is gcc.")
  endif()
elseif("x${CMAKE_CXX_COMPILER_ID}" STREQUAL "xMSVC")
  set (EARANGES_CXX_COMPILER_MSVC TRUE)
  if (EARANGES_VERBOSE_BUILD)
    message(STATUS "[EARanges]: compiler is msvc.")
  endif()
else()
  message(WARNING "[EARanges warning]: unknown compiler ${CMAKE_CXX_COMPILER_ID} !")
endif()

if(CMAKE_SYSTEM_NAME MATCHES "Darwin")
  set (EARANGES_ENV_MACOSX TRUE)
  if (EARANGES_VERBOSE_BUILD)
    message(STATUS "[EARanges]: system is MacOSX.")
  endif()
elseif(CMAKE_SYSTEM_NAME MATCHES "Linux")
  set (EARANGES_ENV_LINUX TRUE)
  if (EARANGES_VERBOSE_BUILD)
    message(STATUS "[EARanges]: system is Linux.")
  endif()
elseif(CMAKE_SYSTEM_NAME MATCHES "Windows")
  set (EARANGES_ENV_WINDOWS TRUE)
  if (EARANGES_VERBOSE_BUILD)
    message(STATUS "[EARanges]: system is Windows.")
  endif()
elseif(CMAKE_SYSTEM_NAME MATCHES "FreeBSD")
  set (EARANGES_ENV_FREEBSD TRUE)
  if (EARANGES_VERBOSE_BUILD)
    message(STATUS "[EARanges]: system is FreeBSD.")
  endif()
elseif(CMAKE_SYSTEM_NAME MATCHES "OpenBSD")
  set (EARANGES_ENV_OPENBSD TRUE)
  if (EARANGES_VERBOSE_BUILD)
    message(STATUS "[EARanges]: system is OpenBSD.")
  endif()
elseif(CMAKE_SYSTEM_NAME MATCHES "Emscripten")
  set (EARANGES_ENV_EMSCRIPTEN TRUE)
  if (EARANGES_VERBOSE_BUILD)
    message(STATUS "[EARanges]: system is Emscripten.")
  endif()
else()
  message(WARNING "[EARanges warning]: unknown system ${CMAKE_SYSTEM_NAME} !")
endif()

if(EARANGES_CXX_STD MATCHES "^[0-9]+$")
  if(EARANGES_CXX_COMPILER_MSVC AND EARANGES_CXX_STD LESS 17)
    # MSVC is currently supported only in 17+ mode
    set(EARANGES_CXX_STD 20)
  elseif(EARANGES_CXX_STD LESS 14)
    set(EARANGES_CXX_STD 14)
  endif()
endif()

# Build type
set(EARANGES_DEBUG_BUILD FALSE)
set(EARANGES_RELEASE_BUILD FALSE)

if (CMAKE_BUILD_TYPE MATCHES "^Debug$")
  set(EARANGES_DEBUG_BUILD TRUE)
  if (EARANGES_VERBOSE_BUILD)
    message(STATUS "[EARanges]: build type is debug.")
  endif()
elseif(CMAKE_BUILD_TYPE MATCHES "^(Release|RelWithDebInfo|MinSizeRel)$")
  set(EARANGES_RELEASE_BUILD TRUE)
  if (EARANGES_VERBOSE_BUILD)
    message(STATUS "[EARanges]: build type is release.")
  endif()
else()
  message(WARNING "[EARanges warning]: unknown build type, defaults to release!")
  set(CMAKE_BUILD_TYPE "Release")
  set(EARANGES_RELEASE_BUILD TRUE)
endif()

if(EARANGE_V3_DOCS)
  find_package(Doxygen)
endif()
find_package(Git)